//
// Generated file, do not edit! Created by nedtool 5.0 from JammerPacket.msg.
//

#ifndef __JAMMERPACKET_M_H
#define __JAMMERPACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0500
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>JammerPacket.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // Jamming packet
 * //
 * packet JammerPacket
 * {
 *     char jam[32];
 * }
 * </pre>
 */
class JammerPacket : public ::omnetpp::cPacket
{
  protected:
    char jam[32];

  private:
    void copy(const JammerPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const JammerPacket&);

  public:
    JammerPacket(const char *name=nullptr, int kind=0);
    JammerPacket(const JammerPacket& other);
    virtual ~JammerPacket();
    JammerPacket& operator=(const JammerPacket& other);
    virtual JammerPacket *dup() const {return new JammerPacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b);

    // field getter/setter methods
    virtual unsigned int getJamArraySize() const;
    virtual char getJam(unsigned int k) const;
    virtual void setJam(unsigned int k, char jam);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const JammerPacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, JammerPacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef __JAMMERPACKET_M_H

